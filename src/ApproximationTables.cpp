#include "ApproximationTables.h"

namespace Halide {
namespace Internal {

namespace {

using OO = ApproximationPrecision::OptimizationObjective;

// clang-format off
// Generate this table with:
//   python3 src/polynomial_optimizer.py atan --order 1 2 3 4 5 6 7 8 --loss mse mae mulpe mulpe_mae --no-gui --format table
//
// Note that the maximal errors are computed with numpy with double precision.
// The real errors are a bit larger with single-precision floats (see correctness/fast_arctan.cpp).
// Also note that ULP distances which are not units are bogus, but this is because this error
// was again measured with double precision, so the actual reconstruction had more bits of
// precision than the actual float32 target value. So in practice the MaxULP Error
// will be close to round(MaxUlpE).
const std::vector<Approximation> table_atan = {
    {OO::MSE, {9.256408e-04, 7.074445e-02, 2.393e+06}, {9.256406e-04, 7.074446e-02, 2.393e+06}, {+8.561426246195e-01}},
    {OO::MSE, {1.027732e-05, 9.195268e-03, 3.912e+05}, {1.027732e-05, 9.195229e-03, 3.912e+05}, {+9.761986890734e-01, -1.999957547830e-01}},
    {OO::MSE, {1.580660e-07, 1.317918e-03, 6.581e+04}, {1.580659e-07, 1.317919e-03, 6.581e+04}, {+9.959783634381e-01, -2.922558712923e-01, +8.299359055716e-02}},
    {OO::MSE, {2.856242e-09, 1.977086e-04, 1.114e+04}, {2.856273e-09, 1.976939e-04, 1.113e+04}, {+9.993157038836e-01, -3.222772978998e-01, +1.490085372528e-01, -4.084647375647e-02}},
    {OO::MSE, {5.683292e-11, 3.039837e-05, 1.890e+03}, {5.685344e-11, 3.044080e-05, 1.889e+03}, {+9.998831953398e-01, -3.305964554182e-01, +1.814374597094e-01, -8.715095332860e-02, +2.185535789324e-02}},
    {OO::MSE, {1.216118e-12, 4.827976e-06, 3.230e+02}, {1.207163e-12, 4.766716e-06, 3.224e+02}, {+9.999800283896e-01, -3.326934855609e-01, +1.940135269211e-01, -1.176779882072e-01, +5.406267698045e-02, -1.229136184185e-02}},
    {OO::MSE, {2.780378e-14, 7.748604e-07, 5.400e+01}, {2.684471e-14, 7.551188e-07, 5.505e+01}, {+9.999965817318e-01, -3.331898450627e-01, +1.982305368508e-01, -1.329321463539e-01, +8.074450509980e-02, -3.459624634267e-02, +7.145532593112e-03}},
    {OO::MSE, {1.473794e-15, 2.384186e-07, 1.000e+01}, {6.180840e-16, 1.206278e-07, 9.404e+00}, {+9.999994145596e-01, -3.333021595481e-01, +1.995103025965e-01, -1.393278791324e-01, +9.708124619040e-02, -5.686283853766e-02, +2.255340356375e-02, -4.253446922410e-03}},

    {OO::MAE, {1.098429e-03, 4.797959e-02, 2.775e+06}, {1.098429e-03, 4.797963e-02, 2.775e+06}, {+8.333777921885e-01}},
    {OO::MAE, {1.210266e-05, 4.961312e-03, 4.540e+05}, {1.210264e-05, 4.961346e-03, 4.540e+05}, {+9.724036821636e-01, -1.919668648518e-01}},
    {OO::MAE, {1.840213e-07, 6.095767e-04, 7.598e+04}, {1.840208e-07, 6.095795e-04, 7.598e+04}, {+9.953591343546e-01, -2.886967022534e-01, +7.934531076059e-02}},
    {OO::MAE, {3.298087e-09, 8.147955e-05, 1.280e+04}, {3.298077e-09, 8.148347e-05, 1.280e+04}, {+9.992139794471e-01, -3.211767216551e-01, +1.462686496593e-01, -3.898922752401e-02}},
    {OO::MAE, {6.523399e-11, 1.150370e-05, 2.162e+03}, {6.525429e-11, 1.145213e-05, 2.162e+03}, {+9.998663549359e-01, -3.303052185023e-01, +1.801611375044e-01, -8.515912986440e-02, +2.084647145573e-02}},
    {OO::MAE, {1.385794e-12, 1.728535e-06, 3.670e+02}, {1.379185e-12, 1.664052e-06, 3.677e+02}, {+9.999772231443e-01, -3.326229291846e-01, +1.935410408419e-01, -1.164281956425e-01, +5.264923498477e-02, -1.171987479879e-02}},
    {OO::MAE, {3.206118e-14, 2.980232e-07, 6.200e+01}, {3.055802e-14, 2.476055e-07, 6.263e+01}, {+9.999961122155e-01, -3.331737033676e-01, +1.980783678452e-01, -1.323342388340e-01, +7.962516974840e-02, -3.360551443675e-02, +6.812217832171e-03}},
    {OO::MAE, {1.424782e-15, 1.192093e-07, 1.100e+01}, {7.014615e-16, 3.750918e-08, 1.067e+01}, {+9.999993356894e-01, -3.332986128382e-01, +1.994657187311e-01, -1.390866273733e-01, +9.642286330577e-02, -5.591358543955e-02, +2.186385364742e-02, -4.054819829411e-03}},

    {OO::MULPE, {1.348952e-03, 1.063762e-01, 1.795e+06}, {1.348952e-03, 1.063763e-01, 1.795e+06}, {+8.917744282438e-01}},
    {OO::MULPE, {2.087210e-05, 1.066434e-02, 1.803e+05}, {2.087206e-05, 1.066435e-02, 1.803e+05}, {+9.889746119749e-01, -2.142408011623e-01}},
    {OO::MULPE, {3.540498e-07, 1.308024e-03, 2.210e+04}, {3.540566e-07, 1.308037e-03, 2.210e+04}, {+9.986340713702e-01, -3.028616668393e-01, +9.093379579497e-02}},
    {OO::MULPE, {6.434177e-09, 1.540780e-04, 2.607e+03}, {6.434131e-09, 1.540729e-04, 2.607e+03}, {+9.998380723090e-01, -3.262397728895e-01, +1.562287265464e-01, -4.458293543618e-02}},
    {OO::MULPE, {1.301531e-10, 2.515316e-05, 4.250e+02}, {1.301756e-10, 2.515281e-05, 4.259e+02}, {+9.999734631755e-01, -3.318124731458e-01, +1.858397172235e-01, -9.293577407250e-02, +2.435838302609e-02}},
    {OO::MULPE, {3.008860e-12, 3.576279e-06, 6.100e+01}, {2.990006e-12, 3.512953e-06, 5.945e+01}, {+9.999962757882e-01, -3.330341285079e-01, +1.959461169715e-01, -1.220368575619e-01, +5.830786218979e-02, -1.378461843523e-02}},
    {OO::MULPE, {6.419028e-14, 5.960464e-07, 1.000e+01}, {6.323790e-14, 4.856691e-07, 8.220e+00}, {+9.999994806663e-01, -3.332729072503e-01, +1.988914150288e-01, -1.351395106061e-01, +8.429392572998e-02, -3.732319152221e-02, +7.949437020175e-03}},
    {OO::MULPE, {1.870140e-15, 1.788139e-07, 3.000e+00}, {1.362648e-15, 7.550800e-08, 1.277e+00}, {+9.999999185625e-01, -3.333207160237e-01, +1.997072487087e-01, -1.402508150744e-01, +9.929408195773e-02, -5.969365583959e-02, +2.439211657512e-02, -4.730090970801e-03}},

    {OO::MULPE_MAE, {9.553479e-04, 6.130517e-02, 2.551e+06}, {9.553478e-04, 6.130520e-02, 2.551e+06}, {+8.467033591688e-01}},
    {OO::MULPE_MAE, {1.164417e-05, 6.735682e-03, 3.694e+05}, {1.164418e-05, 6.735663e-03, 3.694e+05}, {+9.775146303555e-01, -1.988521295255e-01}},
    {OO::MULPE_MAE, {1.791616e-07, 8.527040e-04, 5.879e+04}, {1.791611e-07, 8.527606e-04, 5.879e+04}, {+9.964037827310e-01, -2.926343283504e-01, +8.248146958705e-02}},
    {OO::MULPE_MAE, {3.288783e-09, 1.176000e-04, 9.168e+03}, {3.288769e-09, 1.175690e-04, 9.168e+03}, {+9.994352194119e-01, -3.227984241713e-01, +1.494034588025e-01, -4.075965968740e-02}},
    {OO::MULPE_MAE, {6.626492e-11, 1.639128e-05, 1.458e+03}, {6.629246e-11, 1.646579e-05, 1.458e+03}, {+9.999097803443e-01, -3.308012543233e-01, +1.818201852966e-01, -8.728920226221e-02, +2.177512013194e-02}},
    {OO::MULPE_MAE, {1.399618e-12, 2.443790e-06, 2.420e+02}, {1.391768e-12, 2.412268e-06, 2.421e+02}, {+9.999849772524e-01, -3.327494874436e-01, +1.941928658263e-01, -1.178581474042e-01, +5.404937021844e-02, -1.222382732031e-02}},
    {OO::MULPE_MAE, {3.192841e-14, 3.576279e-07, 4.000e+01}, {3.082241e-14, 3.602125e-07, 4.030e+01}, {+9.999974922066e-01, -3.332052100742e-01, +1.983088378714e-01, -1.330873230831e-01, +8.084595971495e-02, -3.456650100831e-02, +7.105267982716e-03}},
    {OO::MULPE_MAE, {1.272660e-15, 1.192093e-07, 7.000e+00}, {7.102956e-16, 5.488157e-08, 6.669e+00}, {+9.999995837278e-01, -3.333063703183e-01, +1.995421485230e-01, -1.394309415700e-01, +9.723523372798e-02, -5.695280986747e-02, +2.254638134022e-02, -4.235117047322e-03}},
};

const std::vector<Approximation> table_sin = {
    {OO::MSE, {7.240698e-03, 2.156961e-01, 3.761e+06}, {7.240697e-03, 2.156961e-01, 3.761e+06}, {+7.739361493784e-01}},
    {OO::MSE, {7.708955e-06, 9.015024e-03, 1.858e+05}, {7.708959e-06, 9.015077e-03, 1.858e+05}, {+9.887816996585e-01, -1.450518538696e-01}},
    {OO::MSE, {1.762474e-09, 1.598597e-04, 3.772e+03}, {1.762591e-09, 1.599368e-04, 3.772e+03}, {+9.997710801476e-01, -1.658262456458e-01, +7.573892186275e-03}},
    {OO::MSE, {1.366855e-13, 1.609325e-06, 4.100e+01}, {1.340955e-13, 1.569141e-06, 4.148e+01}, {+9.999974823634e-01, -1.666516594602e-01, +8.309494234899e-03, -1.844656341707e-04}},
    {OO::MSE, {1.247236e-15, 1.192093e-07, 2.000e+00}, {4.321218e-18, 9.768833e-09, 2.844e-01}, {+9.999999827408e-01, -1.666665149106e-01, +8.332963486409e-03, -1.980472041073e-04, +2.598035822421e-06}},
    {OO::MSE, {6.870290e-16, 1.192093e-07, 2.000e+00}, {6.878125e-23, 4.203249e-11, 1.330e-03}, {+9.999999999193e-01, -1.666666656846e-01, +8.333329946786e-03, -1.984077221810e-04, +2.752190693456e-06, -2.384311093007e-08}},
    {OO::MSE, {6.523345e-16, 5.960464e-08, 1.000e+00}, {1.697445e-27, 1.719735e-13, 4.552e-06}, {+9.999999999997e-01, -1.666666666623e-01, +8.333333312979e-03, -1.984126571299e-04, +2.755689099937e-06, -2.502837459506e-08, +1.538894289776e-10}},
    {OO::MSE, {1.079946e-15, 1.192093e-07, 2.000e+00}, {1.460704e-28, 5.484502e-14, 9.015e-07}, {+1.000000000000e+00, -1.666666666666e-01, +8.333333333216e-03, -1.984126981726e-04, +2.755731599333e-06, -2.505185270341e-08, +1.604724964022e-10, -7.358280651459e-13}},

    {OO::MAE, {9.227307e-03, 1.385056e-01, 4.581e+06}, {9.227308e-03, 1.385055e-01, 4.581e+06}, {+7.247951349601e-01}},
    {OO::MAE, {9.973877e-06, 4.500449e-03, 2.398e+05}, {9.973885e-06, 4.500482e-03, 2.398e+05}, {+9.855372649066e-01, -1.425721128879e-01}},
    {OO::MAE, {2.278458e-09, 6.783009e-05, 4.994e+03}, {2.278593e-09, 6.782314e-05, 4.994e+03}, {+9.996969245684e-01, -1.656733661041e-01, +7.514480741467e-03}},
    {OO::MAE, {1.742127e-13, 7.152557e-07, 5.600e+01}, {1.729025e-13, 5.900449e-07, 5.573e+01}, {+9.999966175752e-01, -1.666482898586e-01, +8.306330541813e-03, -1.836378506382e-04}},
    {OO::MAE, {1.029095e-15, 1.192093e-07, 2.000e+00}, {5.556802e-18, 3.342596e-09, 3.855e-01}, {+9.999999766015e-01, -1.666664764147e-01, +8.332899930002e-03, -1.980090384516e-04, +2.590499945804e-06}},
    {OO::MAE, {7.117488e-16, 1.192093e-07, 2.000e+00}, {8.822849e-23, 1.331513e-11, 1.814e-03}, {+9.999999998899e-01, -1.666666654149e-01, +8.333329265601e-03, -1.984070297395e-04, +2.751886033353e-06, -2.379478505898e-08}},
    {OO::MAE, {6.488650e-16, 5.960464e-08, 1.000e+00}, {8.462239e-28, 4.618528e-14, 6.394e-06}, {+9.999999999996e-01, -1.666666666607e-01, +8.333333307565e-03, -1.984126490233e-04, +2.755683238258e-06, -2.502635150503e-08, +1.536225868737e-10}},
    {OO::MAE, {1.079946e-15, 1.192093e-07, 2.000e+00}, {9.817314e-29, 3.153033e-14, 5.290e-07}, {+1.000000000000e+00, -1.666666666666e-01, +8.333333333062e-03, -1.984126979101e-04, +2.755731376832e-06, -2.505174647588e-08, +1.604473706673e-10, -7.338851748528e-13}},

    {OO::MULPE, {1.107475e-05, 7.440805e-03, 1.318e+05}, {1.107485e-05, 7.440796e-03, 1.318e+05}, {+9.921079543765e-01, -1.459937500708e-01}},
    {OO::MULPE, {2.909670e-09, 1.058578e-04, 1.816e+03}, {2.909475e-09, 1.058728e-04, 1.815e+03}, {+9.998910190367e-01, -1.659516653053e-01, +7.599368827609e-03}},
    {OO::MULPE, {2.140897e-13, 1.013279e-06, 1.700e+01}, {2.094249e-13, 9.542396e-07, 1.624e+01}, {+9.999990241438e-01, -1.666551415428e-01, +8.311578346228e-03, -1.848149180154e-04}},
    {OO::MULPE, {6.304576e-16, 1.192093e-07, 2.000e+00}, {6.733658e-18, 5.563845e-09, 9.363e-02}, {+9.999999943633e-01, -1.666665642171e-01, +8.333021473957e-03, -1.980724844838e-04, +2.601653336237e-06}},
    {OO::MULPE, {6.710032e-16, 1.192093e-07, 2.000e+00}, {1.126961e-22, 2.157075e-11, 3.595e-04}, {+9.999999999783e-01, -1.666666660833e-01, +8.333330685711e-03, -1.984082803830e-04, +2.752374017534e-06, -2.386465908222e-08}},
    {OO::MULPE, {6.518094e-16, 1.192093e-07, 2.000e+00}, {1.081199e-27, 6.505907e-14, 1.131e-06}, {+9.999999999999e-01, -1.666666666642e-01, +8.333333317740e-03, -1.984126621534e-04, +2.755691597526e-06, -2.502893622913e-08, +1.539328109423e-10}},
    {OO::MULPE, {1.063833e-15, 1.192093e-07, 2.000e+00}, {4.850363e-29, 1.043610e-14, 2.552e-07}, {+1.000000000000e+00, -1.666666666666e-01, +8.333333333247e-03, -1.984126982036e-04, +2.755731614398e-06, -2.505185496895e-08, +1.604740229588e-10, -7.365774656876e-13}},


    {OO::MULPE_MAE, {8.411867e-03, 1.564285e-01, 4.391e+06}, {8.411868e-03, 1.564284e-01, 4.391e+06}, {+7.362052029045e-01}},
    {OO::MULPE_MAE, {8.886327e-06, 5.635440e-03, 2.056e+05}, {8.886337e-06, 5.635491e-03, 2.056e+05}, {+9.875870462598e-01, -1.436957043201e-01}},
    {OO::MULPE_MAE, {2.069881e-09, 8.904934e-05, 3.881e+03}, {2.069986e-09, 8.899643e-05, 3.882e+03}, {+9.997644344900e-01, -1.657697900667e-01, +7.544685068473e-03}},
    {OO::MULPE_MAE, {1.637477e-13, 7.748604e-07, 3.900e+01}, {1.600186e-13, 7.984658e-07, 3.973e+01}, {+9.999975887425e-01, -1.666508608020e-01, +8.308251901383e-03, -1.840677400196e-04}},
    {OO::MULPE_MAE, {8.521529e-16, 1.192093e-07, 2.000e+00}, {5.173821e-18, 4.628003e-09, 2.606e-01}, {+9.999999841855e-01, -1.666665086839e-01, +8.332942264889e-03, -1.980307427943e-04, +2.594308273457e-06}},
    {OO::MULPE_MAE, {6.818248e-16, 1.192093e-07, 2.000e+00}, {8.110907e-23, 1.908185e-11, 1.182e-03}, {+9.999999999283e-01, -1.666666656711e-01, +8.333329792557e-03, -1.984074917614e-04, +2.752067442158e-06, -2.382104435927e-08}},
    {OO::MULPE_MAE, {6.505998e-16, 5.960464e-08, 1.000e+00}, {7.200794e-28, 6.217249e-14, 3.882e-06}, {+9.999999999998e-01, -1.666666666623e-01, +8.333333312119e-03, -1.984126550233e-04, +2.755687171865e-06, -2.502760697298e-08, +1.537781013639e-10}},
    {OO::MULPE_MAE, {1.079946e-15, 1.192093e-07, 2.000e+00}, {5.815263e-29, 1.909584e-14, 7.153e-07}, {+1.000000000000e+00, -1.666666666665e-01, +8.333333333059e-03, -1.984126979214e-04, +2.755731363447e-06, -2.505173067602e-08, +1.604421456802e-10, -7.332745521893e-13}},
};

const std::vector<Approximation> table_cos = {
    {OO::MSE, {9.480023e-02, 6.365530e-01, 9.619e+22}, {9.480024e-02, 6.365530e-01, 9.619e+22}, {+6.365530322702e-01}},
    {OO::MSE, {2.986043e-04, 5.039889e-02, 7.616e+21}, {2.986043e-04, 5.039883e-02, 7.616e+21}, {+9.801548262813e-01, -4.176676661908e-01}},
    {OO::MSE, {1.365769e-07, 1.308739e-03, 1.978e+20}, {1.365777e-07, 1.308842e-03, 1.978e+20}, {+9.995792752222e-01, -4.963896031590e-01, +3.720750375376e-02}},
    {OO::MSE, {1.733477e-11, 1.686811e-05, 2.549e+18}, {1.733373e-11, 1.688705e-05, 2.552e+18}, {+9.999952791383e-01, -4.999308406845e-01, +4.151160700518e-02, -1.278666600200e-03}},
    {OO::MSE, {2.469982e-15, 2.086163e-07, 9.253e+06}, {8.384793e-16, 1.302703e-07, 1.969e+16}, {+9.999999672396e-01, -4.999992678658e-01, +4.166408812123e-02, -1.385739453680e-03, +2.323696001805e-05}},
    {OO::MSE, {1.143156e-15, 1.508743e-07, 1.801e+16}, {1.869445e-20, 6.684378e-10, 1.010e+14}, {+9.999999998455e-01, -4.999999951073e-01, +4.166664184438e-02, -1.388843186657e-03, +2.476374037574e-05, -2.611444500644e-07}},
    {OO::MSE, {1.077433e-15, 1.415610e-07, 9.253e+06}, {2.181317e-25, 2.439654e-12, 3.687e+11}, {+9.999999999995e-01, -4.999999999775e-01, +4.166666651172e-02, -1.388888490764e-03, +2.480110240442e-05, -2.752709146459e-07, +1.994244547276e-09}},
    {OO::MSE, {1.416394e-15, 1.192093e-07, 5.770e+15}, {1.742142e-28, 3.683165e-14, 1.371e+09}, {+1.000000000000e+00, -4.999999999999e-01, +4.166666666598e-02, -1.388888886590e-03, +2.480158347452e-05, -2.755697405682e-07, +2.085951328334e-09, -1.102196112157e-11}},

    {OO::MAE, {1.132138e-01, 5.008563e-01, 7.569e+22}, {1.132138e-01, 5.008563e-01, 7.569e+22}, {+5.008563300125e-01}},
    {OO::MAE, {3.853231e-04, 2.806246e-02, 4.241e+21}, {3.853228e-04, 2.806247e-02, 4.241e+21}, {+9.720197703552e-01, -4.053180647444e-01}},
    {OO::MAE, {1.767483e-07, 5.978346e-04, 9.034e+19}, {1.767477e-07, 5.978689e-04, 9.035e+19}, {+9.994036475445e-01, -4.955825435829e-01, +3.679248124650e-02}},
    {OO::MAE, {2.238707e-11, 6.861985e-06, 1.009e+18}, {2.238414e-11, 6.715619e-06, 1.015e+18}, {+9.999932996366e-01, -4.999124753517e-01, +4.148779062644e-02, -1.271221904739e-03}},
    {OO::MAE, {2.520330e-15, 2.309680e-07, 9.007e+15}, {1.079844e-15, 4.660014e-08, 7.042e+15}, {+9.999999534962e-01, -4.999990538773e-01, +4.166358557927e-02, -1.385371041170e-03, +2.315406153397e-05}},
    {OO::MAE, {1.134272e-15, 1.415610e-07, 1.801e+16}, {2.401332e-20, 2.196253e-10, 3.319e+13}, {+9.999999997808e-01, -4.999999935876e-01, +4.166663626797e-02, -1.388836151841e-03, +2.476016706160e-05, -2.605159113434e-07}},
    {OO::MAE, {1.073625e-15, 1.415610e-07, 9.253e+06}, {2.798987e-25, 7.648824e-13, 1.156e+11}, {+9.999999999993e-01, -4.999999999702e-01, +4.166666647327e-02, -1.388888417772e-03, +2.480104045009e-05, -2.752468857004e-07, +1.990774323168e-09}},
    {OO::MAE, {1.416394e-15, 1.192093e-07, 5.770e+15}, {1.177193e-27, 4.577849e-14, 6.851e+09}, {+1.000000000000e+00, -4.999999999999e-01, +4.166666666605e-02, -1.388888886709e-03, +2.480158352994e-05, -2.755697319085e-07, +2.085940253860e-09, -1.102018476473e-11}},

    {OO::MULPE, {4.999336e-01, 9.999478e-01, 7.879e+18}, {4.999336e-01, 9.999479e-01, 7.879e+18}, {+5.214215500398e-05}},
    {OO::MULPE, {7.223857e-04, 4.062414e-02, 1.081e+17}, {7.223855e-04, 4.062415e-02, 1.041e+17}, {+9.675610618271e-01, -3.921380072978e-01}},
    {OO::MULPE, {2.511469e-07, 8.888543e-04, 9.253e+06}, {2.511505e-07, 8.888331e-04, 1.084e+15}, {+9.994158021999e-01, -4.954615279148e-01, +3.664323676119e-02}},
    {OO::MULPE, {2.758840e-11, 1.068413e-05, 9.007e+15}, {2.758362e-11, 1.058909e-05, 7.514e+12}, {+9.999939613366e-01, -4.999164091393e-01, +4.149015773027e-02, -1.271132100554e-03}},
    {OO::MULPE, {2.777868e-15, 2.235174e-07, 9.007e+15}, {1.219583e-15, 7.808629e-08, 3.709e+10}, {+9.999999601259e-01, -4.999991408850e-01, +4.166375354259e-02, -1.385468231073e-03, +2.317021818021e-05}},
    {OO::MULPE, {1.174855e-15, 1.676381e-07, 1.801e+16}, {2.556933e-20, 3.897100e-10, 6.132e+08}, {+9.999999998182e-01, -4.999999943855e-01, +4.166663891853e-02, -1.388839154551e-03, +2.476152247882e-05, -2.607249571795e-07}},
    {OO::MULPE, {1.074926e-15, 1.415610e-07, 9.253e+06}, {2.926632e-25, 1.466618e-12, 1.501e+10}, {+9.999999999994e-01, -4.999999999746e-01, +4.166666649505e-02, -1.388888456638e-03, +2.480107133901e-05, -2.752580601229e-07, +1.992272291584e-09}},
    {OO::MULPE, {1.415776e-15, 1.192093e-07, 5.779e+15}, {8.955696e-27, 1.105227e-13, 1.624e+10}, {+9.999999999999e-01, -4.999999999999e-01, +4.166666666560e-02, -1.388888885708e-03, +2.480158249900e-05, -2.755691746598e-07, +2.085786959816e-09, -1.100330937476e-11}},

    {OO::MULPE_MAE, {1.548511e-01, 6.084998e-01, 5.916e+22}, {1.548511e-01, 6.084998e-01, 5.916e+22}, {+3.915002085129e-01}},
    {OO::MULPE_MAE, {4.806202e-04, 3.191990e-02, 2.673e+21}, {4.806205e-04, 3.191990e-02, 2.673e+21}, {+9.694139427306e-01, -4.000582017756e-01}},
    {OO::MULPE_MAE, {2.052247e-07, 6.776005e-04, 5.151e+19}, {2.052237e-07, 6.775717e-04, 5.153e+19}, {+9.993763314790e-01, -4.954106084121e-01, +3.668508881964e-02}},
    {OO::MULPE_MAE, {2.487223e-11, 7.763505e-06, 5.494e+17}, {2.489693e-11, 7.653471e-06, 5.401e+17}, {+9.999931653804e-01, -4.999105132126e-01, +4.148449530045e-02, -1.269990577359e-03}},
    {OO::MULPE_MAE, {2.798258e-15, 2.309680e-07, 9.007e+15}, {1.167015e-15, 5.353958e-08, 3.548e+15}, {+9.999999533570e-01, -4.999990453277e-01, +4.166355328301e-02, -1.385339611903e-03, +2.314543928106e-05}},
    {OO::MULPE_MAE, {1.249387e-15, 1.676381e-07, 1.801e+16}, {2.541519e-20, 2.546147e-10, 1.595e+13}, {+9.999999997829e-01, -4.999999936002e-01, +4.166663620207e-02, -1.388835945483e-03, +2.476000635199e-05, -2.604787235350e-07}},
    {OO::MULPE_MAE, {1.073625e-15, 1.415610e-07, 9.253e+06}, {2.923624e-25, 9.053105e-13, 4.651e+10}, {+9.999999999992e-01, -4.999999999705e-01, +4.166666647437e-02, -1.388888418784e-03, +2.480104048580e-05, -2.752466079503e-07, +1.990695219778e-09}},
    {OO::MULPE_MAE, {1.416211e-15, 1.192093e-07, 5.779e+15}, {3.806853e-28, 3.719247e-14, 4.550e+08}, {+1.000000000000e+00, -4.999999999998e-01, +4.166666666579e-02, -1.388888886164e-03, +2.480158293126e-05, -2.755693807865e-07, +2.085836114940e-09, -1.100797231146e-11}},
};

const std::vector<Approximation> table_tan = {
    {OO::MULPE, {5.159290e-06, 1.103395e-02, 1.854e+05}, {5.159289e-06, 1.103401e-02, 1.854e+05}, {+4.201839882062e-01}},
{OO::MULPE, {2.170889e-08, 7.248521e-04, 1.211e+04}, {2.170891e-08, 7.248743e-04, 1.211e+04}, {+3.197428832965e-01, +1.973253078134e-01}},
{OO::MULPE, {1.348289e-10, 4.315376e-05, 7.350e+02}, {1.348307e-10, 4.313375e-05, 7.347e+02}, {+3.348595219454e-01, +1.180891605562e-01, +9.242309101434e-02}},
{OO::MULPE, {5.249293e-13, 3.755093e-06, 6.300e+01}, {5.245885e-13, 3.667941e-06, 6.154e+01}, {+3.331570806230e-01, +1.359971067495e-01, +4.164380637066e-02, +4.285723811924e-02}},
{OO::MULPE, {2.889157e-15, 2.980232e-07, 5.000e+00}, {2.665388e-15, 2.217360e-07, 3.720e+00}, {+3.333527971351e-01, +1.329080436773e-01, +5.698056422142e-02, +1.283061933440e-02, +2.022876099555e-02}},
{OO::MULPE, {2.061869e-16, 1.192093e-07, 2.000e+00}, {1.306129e-17, 1.599526e-08, 3.017e-01}, {+3.333313624199e-01, +1.333938966167e-01, +5.336291228807e-02, +2.459317072063e-02, +2.877210610382e-03, +9.518051305408e-03}},
{OO::MULPE, {1.943395e-16, 1.192093e-07, 2.000e+00}, {6.973325e-20, 1.113327e-09, 1.944e-02}, {+3.333334960206e-01, +1.333263410460e-01, +5.406416963375e-02, +2.125900184678e-02, +1.089632765911e-02, +1.344066651514e-05, +4.413312475957e-03}},

};

const std::vector<Approximation> table_expm1 = {
    {OO::MSE, {3.812849e-06, 5.397916e-03, 6.509e+05}, {3.812849e-06, 5.397874e-03, 6.509e+05}, {+9.586169969675e-01, +6.871420261184e-01}},
    {OO::MSE, {6.469926e-09, 2.492666e-04, 5.105e+04}, {6.469859e-09, 2.492473e-04, 5.105e+04}, {+1.003293378670e+00, +4.723464725320e-01, +2.323566415239e-01}},
    {OO::MSE, {7.279908e-12, 9.179115e-06, 2.825e+03}, {7.282764e-12, 9.164000e-06, 2.825e+03}, {+9.998144469482e-01, +5.024533540575e-01, +1.563638441627e-01, +5.845743563888e-02}},
    {OO::MSE, {6.836067e-15, 2.980232e-07, 1.180e+02}, {5.805296e-15, 2.791827e-07, 1.197e+02}, {+1.000008037679e+00, +4.998472602755e-01, +1.676404912857e-01, +3.893967788387e-02, +1.172971230000e-02}},
    {OO::MSE, {8.423257e-16, 1.192093e-07, 5.000e+00}, {3.440451e-18, 7.251181e-09, 4.090e+00}, {+9.999997181908e-01, +5.000072544433e-01, +1.666020415869e-01, +4.193528084336e-02, +7.769080482287e-03, +1.958603142969e-03}},
    {OO::MSE, {6.688659e-16, 1.192093e-07, 2.000e+00}, {1.573244e-21, 1.640024e-10, 1.167e-01}, {+1.000000008282e+00, +4.999997230403e-01, +1.666699345593e-01, +4.164803407491e-02, +8.390543534130e-03, +1.292733047098e-03, +2.801206949334e-04}},
    {OO::MSE, {9.748196e-16, 1.192093e-07, 2.000e+00}, {5.714804e-25, 3.283263e-12, 2.851e-03}, {+9.999999997908e-01, +5.000000088090e-01, +1.666665340994e-01, +4.166765261568e-02, +8.329234024258e-03, +1.398848375540e-03, +1.844614026219e-04, +3.504092902288e-05}},
    {OO::MSE, {6.921538e-16, 1.192093e-07, 2.000e+00}, {1.688018e-28, 5.906386e-14, 6.165e-05}, {+1.000000000005e+00, +4.999999997604e-01, +1.666666711366e-01, +4.166662481000e-02, +8.333557838287e-03, +1.388157349188e-03, +1.998815519370e-04, +2.303775459903e-05, +3.895361763821e-06}},

    {OO::MAE, {4.528305e-06, 3.017247e-03, 7.229e+05}, {4.528297e-06, 3.017278e-03, 7.229e+05}, {+9.540777804872e-01, +6.986456293130e-01}},
    {OO::MAE, {7.682157e-09, 1.242757e-04, 5.388e+04}, {7.682513e-09, 1.242120e-04, 5.388e+04}, {+1.003476082426e+00, +4.707538244825e-01, +2.346495265175e-01}},
    {OO::MAE, {8.689729e-12, 4.291534e-06, 2.821e+03}, {8.686324e-12, 4.175513e-06, 2.821e+03}, {+9.998143852183e-01, +5.025371047007e-01, +1.559966007238e-01, +5.883473590550e-02}},
    {OO::MAE, {7.715488e-15, 2.384186e-07, 1.120e+02}, {6.958417e-15, 1.181571e-07, 1.132e+02}, {+1.000007634619e+00, +4.998465967778e-01, +1.676630399584e-01, +3.887360056402e-02, +1.178285443998e-02}},
    {OO::MAE, {7.975938e-16, 1.192093e-07, 4.000e+00}, {4.142435e-18, 2.882449e-09, 3.673e+00}, {+9.999997450078e-01, +5.000070600280e-01, +1.666017367054e-01, +4.193976524445e-02, +7.759200702526e-03, +1.965152465148e-03}},
    {OO::MAE, {6.950561e-16, 1.192093e-07, 2.000e+00}, {1.901624e-21, 6.174972e-11, 9.973e-02}, {+1.000000007163e+00, +4.999997389022e-01, +1.666698813595e-01, +4.164795496705e-02, +8.391261860372e-03, +1.291462952971e-03, +2.808382464280e-04}},
    {OO::MAE, {1.002142e-15, 1.192093e-07, 2.000e+00}, {6.930708e-25, 1.178613e-12, 2.331e-03}, {+9.999999998265e-01, +5.000000080492e-01, +1.666665391523e-01, +4.166764195310e-02, +8.329219171555e-03, +1.398945417415e-03, +1.843178442063e-04, +3.511169669672e-05}},
    {OO::MAE, {6.969243e-16, 1.192093e-07, 2.000e+00}, {2.057985e-28, 2.065015e-14, 4.886e-05}, {+1.000000000004e+00, +4.999999997869e-01, +1.666666708803e-01, +4.166662585571e-02, +8.333556518133e-03, +1.388154090654e-03, +1.998944654500e-04, +2.302203910474e-05, +3.902108986233e-06}},

    {OO::MULPE, {2.515622e-05, 7.979155e-03, 6.688e+04}, {2.515623e-05, 7.979146e-03, 6.688e+04}, {+6.220663921554e-01}},
    {OO::MULPE, {2.798847e-08, 2.608299e-04, 2.185e+03}, {2.798855e-08, 2.609093e-04, 2.185e+03}, {+4.851354343802e-01, +2.207257873415e-01}},
    {OO::MULPE, {2.429739e-11, 7.629395e-06, 6.400e+01}, {2.428812e-11, 7.642552e-06, 6.394e+01}, {+5.011474243376e-01, +1.591453425300e-01, +5.661211928399e-02}},
    {OO::MULPE, {2.041378e-14, 3.576279e-07, 3.000e+00}, {1.689195e-14, 2.010388e-07, 1.680e+00}, {+4.999379508234e-01, +1.673045364769e-01, +3.944450578588e-02, +1.146363007420e-02}},
    {OO::MULPE, {3.596585e-15, 1.192093e-07, 1.000e+00}, {8.681018e-18, 4.622954e-09, 3.857e-02}, {+5.000027979250e-01, +1.666265919711e-01, +4.187404883990e-02, +7.839930184853e-03, +1.927684090112e-03}},
    {OO::MULPE, {3.563458e-15, 1.192093e-07, 1.000e+00}, {3.678312e-21, 8.945067e-11, 7.491e-04}, {+4.999999043172e-01, +1.666685240350e-01, +4.165326393899e-02, +8.380522643499e-03, +1.302313587217e-03, +2.765051450178e-04}},
    {OO::MULPE, {3.559877e-15, 1.192093e-07, 1.000e+00}, {1.265926e-24, 1.680878e-12, 1.410e-05}, {+5.000000028455e-01, +1.666665956230e-01, +4.166734057069e-02, +8.330099227474e-03, +1.397511229334e-03, +1.855425570009e-04, +3.468460539570e-05}},
    {OO::MULPE, {3.598376e-15, 1.192093e-07, 1.000e+00}, {3.505140e-28, 2.753353e-14, 2.310e-07}, {+4.999999999275e-01, +1.666666689361e-01, +4.166663936454e-02, +8.333503297949e-03, +1.388278350318e-03, +1.997241281281e-04, +2.314870705908e-05, +3.862673380142e-06}},

    {OO::MULPE_MAE, {4.455286e-06, 4.095078e-03, 6.132e+05}, {4.455271e-06, 4.095035e-03, 6.132e+05}, {+9.609801494617e-01, +6.864444067116e-01}},
    {OO::MULPE_MAE, {7.874918e-09, 1.718998e-04, 4.362e+04}, {7.874904e-09, 1.718987e-04, 4.362e+04}, {+1.002823697625e+00, +4.736653070406e-01, +2.316638057707e-01}},
    {OO::MULPE_MAE, {9.074595e-12, 5.722046e-06, 2.216e+03}, {9.074058e-12, 5.785931e-06, 2.215e+03}, {+9.998534040095e-01, +5.022230771467e-01, +1.567477791804e-01, +5.828048032246e-02}},
    {OO::MULPE_MAE, {8.127850e-15, 2.384186e-07, 8.500e+01}, {7.348439e-15, 1.639465e-07, 8.609e+01}, {+1.000005858839e+00, +4.998685135191e-01, +1.675736664707e-01, +3.902161174745e-02, +1.169693414724e-02}},
    {OO::MULPE_MAE, {7.670654e-16, 1.192093e-07, 4.000e+00}, {4.390196e-18, 3.995329e-09, 2.733e+00}, {+9.999998078179e-01, +5.000059485214e-01, +1.666085294362e-01, +4.192104628917e-02, +7.783072305217e-03, +1.953689557628e-03}},
    {OO::MULPE_MAE, {6.673615e-16, 1.192093e-07, 2.000e+00}, {2.020516e-21, 8.581513e-11, 7.190e-02}, {+1.000000005260e+00, +4.999997840674e-01, +1.666694985773e-01, +4.164950188946e-02, +8.388032990691e-03, +1.294823272274e-03, +2.794585465913e-04}},
    {OO::MULPE_MAE, {1.011682e-15, 1.192093e-07, 2.000e+00}, {7.364892e-25, 1.625144e-12, 1.665e-03}, {+9.999999998747e-01, +5.000000065870e-01, +1.666665553564e-01, +4.166755322925e-02, +8.329485508629e-03, +1.398498967825e-03, +1.847098898762e-04, +3.497120422357e-05}},
    {OO::MULPE_MAE, {6.882506e-16, 1.192093e-07, 2.000e+00}, {2.180797e-28, 2.853273e-14, 3.423e-05}, {+1.000000000003e+00, +4.999999998284e-01, +1.666666702926e-01, +4.166663004659e-02, +8.333539570298e-03, +1.388194689533e-03, +1.998374114932e-04, +2.306549201475e-05, +3.888267520825e-06}},
};

const std::vector<Approximation> table_exp = {
    {OO::MSE, {2.095875e-05, 1.256025e-02, 1.049e+05}, {2.095872e-05, 1.256025e-02, 1.049e+05}, {+6.125314279961e-01}},
    {OO::MSE, {2.384411e-08, 4.768372e-04, 3.969e+03}, {2.384462e-08, 4.768587e-04, 3.968e+03}, {+4.865970180356e-01, +2.179687191259e-01}},
    {OO::MSE, {2.106721e-11, 1.549721e-05, 1.300e+02}, {2.107109e-11, 1.556188e-05, 1.289e+02}, {+5.010482902446e-01, +1.596063791184e-01, +5.611901143493e-02}},
    {OO::MSE, {1.728478e-14, 4.768372e-07, 4.000e+00}, {1.425342e-14, 4.371231e-07, 3.598e+00}, {+4.999400050356e-01, +1.672793127971e-01, +3.951850396081e-02, +1.140172920844e-02}},
    {OO::MSE, {3.518019e-15, 1.192093e-07, 1.000e+00}, {7.497112e-18, 1.070118e-08, 8.747e-02}, {+5.000026817034e-01, +1.666284234423e-01, +4.186551937660e-02, +7.855326219473e-03, +1.918174439295e-03}},
    {OO::MSE, {3.497203e-15, 1.192093e-07, 1.000e+00}, {3.130434e-21, 2.313483e-10, 1.876e-03}, {+4.999999022218e-01, +1.666685131313e-01, +4.165350124482e-02, +8.379560101146e-03, +1.303822371622e-03, +2.756777438506e-04}},
    {OO::MSE, {3.497203e-15, 1.192093e-07, 1.000e+00}, {1.058502e-24, 4.469314e-12, 3.591e-05}, {+5.000000029995e-01, +1.666665944304e-01, +4.166733838390e-02, +8.330140484722e-03, +1.397377519323e-03, +1.857185764010e-04, +3.460056168441e-05}},

    {OO::MAE, {2.541256e-05, 7.843018e-03, 6.562e+04}, {2.541258e-05, 7.842941e-03, 6.562e+04}, {+6.223498867001e-01}},
    {OO::MAE, {2.822427e-08, 2.483130e-04, 2.079e+03}, {2.822512e-08, 2.483483e-04, 2.079e+03}, {+4.853163410439e-01, +2.205025122026e-01}},
    {OO::MAE, {2.476524e-11, 7.271767e-06, 6.100e+01}, {2.475303e-11, 7.224839e-06, 6.051e+01}, {+5.011302679738e-01, +1.591947347725e-01, +5.657837963864e-02}},
    {OO::MAE, {2.007422e-14, 3.576279e-07, 3.000e+00}, {1.673747e-14, 1.862743e-07, 1.561e+00}, {+4.999369066691e-01, +1.673104192758e-01, +3.943404912764e-02, +1.146969921166e-02}},
    {OO::MAE, {3.504141e-15, 1.192093e-07, 1.000e+00}, {8.824081e-18, 4.256409e-09, 3.567e-02}, {+5.000027412712e-01, +1.666270656926e-01, +4.187260905362e-02, +7.841805415562e-03, +1.926801683620e-03}},
    {OO::MAE, {3.490264e-15, 1.192093e-07, 1.000e+00}, {3.696417e-21, 8.685230e-11, 7.281e-04}, {+4.999999029477e-01, +1.666685437425e-01, +4.165316006701e-02, +8.380779979652e-03, +1.302010630328e-03, +2.766417313778e-04}},
    {OO::MAE, {3.497203e-15, 1.192093e-07, 1.000e+00}, {1.254134e-24, 1.596723e-12, 1.338e-05}, {+5.000000028912e-01, +1.666665947126e-01, +4.166734697143e-02, +8.330077545511e-03, +1.397549696317e-03, +1.855080537536e-04, +3.469697539741e-05}},

    {OO::MULPE, {2.534894e-05, 7.876754e-03, 6.569e+04}, {2.534892e-05, 7.876776e-03, 6.569e+04}, {+6.222794637228e-01}},
    {OO::MULPE, {2.812302e-08, 2.510548e-04, 2.080e+03}, {2.812340e-08, 2.510042e-04, 2.079e+03}, {+4.853324557138e-01, +2.204712884107e-01}},
    {OO::MULPE, {2.464515e-11, 7.390976e-06, 6.100e+01}, {2.463897e-11, 7.362430e-06, 6.045e+01}, {+5.011284571887e-01, +1.592029426165e-01, +5.656971107687e-02}},
    {OO::MULPE, {2.001871e-14, 3.576279e-07, 3.000e+00}, {1.664403e-14, 1.917460e-07, 1.558e+00}, {+4.999370391207e-01, +1.673093882463e-01, +3.943650192630e-02, +1.146787460297e-02}},
    {OO::MULPE, {3.531897e-15, 1.192093e-07, 1.000e+00}, {8.766359e-18, 4.433932e-09, 3.558e-02}, {+5.000027341639e-01, +1.666271487832e-01, +4.187227932863e-02, +7.842345341026e-03, +1.926488701034e-03}},
    {OO::MULPE, {3.476386e-15, 1.192093e-07, 1.000e+00}, {3.668730e-21, 9.172130e-11, 7.256e-04}, {+4.999999032470e-01, +1.666685388782e-01, +4.165318839546e-02, +8.380704038329e-03, +1.302106041753e-03, +2.765962183101e-04}},
    {OO::MULPE, {3.497203e-15, 1.192093e-07, 1.000e+00}, {1.243562e-24, 1.712408e-12, 1.333e-05}, {+5.000000028808e-01, +1.666665949343e-01, +4.166734520946e-02, +8.330084370908e-03, +1.397535839768e-03, +1.855222208987e-04, +3.469122002505e-05}},

    {OO::MULPE_MAE, {2.534877e-05, 7.876873e-03, 6.569e+04}, {2.534874e-05, 7.876874e-03, 6.569e+04}, {+6.222792579016e-01}},
    {OO::MULPE_MAE, {2.812334e-08, 2.510548e-04, 2.079e+03}, {2.812412e-08, 2.509852e-04, 2.079e+03}, {+4.853323466085e-01, +2.204715029353e-01}},
    {OO::MULPE_MAE, {2.465655e-11, 7.390976e-06, 6.100e+01}, {2.464021e-11, 7.360899e-06, 6.044e+01}, {+5.011284762910e-01, +1.592028557588e-01, +5.656980325843e-02}},
    {OO::MULPE_MAE, {2.001871e-14, 3.576279e-07, 3.000e+00}, {1.664398e-14, 1.917291e-07, 1.558e+00}, {+4.999370382850e-01, +1.673093924410e-01, +3.943649503999e-02, +1.146787842262e-02}},
    {OO::MULPE_MAE, {3.524958e-15, 1.192093e-07, 1.000e+00}, {8.764176e-18, 4.437128e-09, 3.560e-02}, {+5.000027342362e-01, +1.666271489914e-01, +4.187227589977e-02, +7.842353719147e-03, +1.926482783693e-03}},
    {OO::MULPE_MAE, {3.476386e-15, 1.192093e-07, 1.000e+00}, {3.666690e-21, 9.187406e-11, 7.269e-04}, {+4.999999032353e-01, +1.666685389384e-01, +4.165318853497e-02, +8.380702768982e-03, +1.302108425988e-03, +2.765948116529e-04}},
    {OO::MULPE_MAE, {3.497203e-15, 1.192093e-07, 1.000e+00}, {1.242412e-24, 1.716627e-12, 1.337e-05}, {+5.000000028817e-01, +1.666665949243e-01, +4.166734523835e-02, +8.330084396808e-03, +1.397535584577e-03, +1.855226353014e-04, +3.469100472857e-05}},
};

const std::vector<Approximation> table_log = {
    {OO::MSE, {4.790894e-04, 6.781766e-02, 3.718e+06}, {4.790894e-04, 6.781764e-02, 3.718e+06}, {+8.794577267418e-01}},
    {OO::MSE, {6.533330e-06, 6.624579e-03, 3.338e+05}, {6.533332e-06, 6.624537e-03, 3.338e+05}, {+1.015451251028e+00, -4.351155556431e-01}},
    {OO::MSE, {7.077928e-08, 9.658635e-04, 6.867e+04}, {7.077932e-08, 9.658528e-04, 6.867e+04}, {+1.004005244335e+00, -5.087981118285e-01, +2.505616982548e-01}},
    {OO::MSE, {1.934842e-09, 1.745522e-04, 8.164e+03}, {1.934900e-09, 1.745397e-04, 8.163e+03}, {+1.000110728787e+00, -5.043463849686e-01, +3.378839458611e-01, -1.737637903383e-01}},
    {OO::MSE, {2.952994e-11, 2.110004e-05, 1.811e+03}, {2.952885e-11, 2.109356e-05, 1.812e+03}, {+9.998936966077e-01, -5.002000545871e-01, +3.395000023789e-01, -2.544173540944e-01, +1.295831017483e-01}},
    {OO::MSE, {6.781848e-13, 3.963709e-06, 2.960e+02}, {6.780292e-13, 3.959879e-06, 2.957e+02}, {+9.999847597487e-01, -4.998772684855e-01, +3.341949609521e-01, -2.564138525825e-01, +1.976169792432e-01, -9.500732583079e-02}},
    {OO::MSE, {1.702448e-14, 5.960464e-07, 3.800e+01}, {1.669540e-14, 5.864628e-07, 3.780e+01}, {+1.000001515319e+00, -4.999747715500e-01, +3.331414065463e-01, -2.510221488328e-01, +2.068532687266e-01, -1.641054986850e-01, +7.740173341293e-02}},
    {OO::MSE, {5.117392e-16, 8.940697e-08, 1.100e+01}, {3.162951e-16, 9.004463e-08, 9.505e+00}, {+1.000000571811e+00, -5.000011672553e-01, +3.332677661909e-01, -2.498121792459e-01, +2.017212758817e-01, -1.736188128017e-01, +1.363767423616e-01, -6.056930222876e-02}},
    {OO::MSE, {1.507722e-16, 2.980232e-08, 2.000e+00}, {9.114393e-18, 1.630288e-08, 1.063e+00}, {+1.000000027554e+00, -5.000010653233e-01, +3.333314900388e-01, -2.499080931932e-01, +1.998839417635e-01, -1.688153947620e-01, +1.492030033570e-01, -1.157653252781e-01, +4.921272357508e-02}},

    {OO::MAE, {6.039341e-04, 5.664836e-02, 3.055e+06}, {6.039338e-04, 5.664835e-02, 3.055e+06}, {+9.241348814945e-01}},
    {OO::MAE, {7.881213e-06, 4.752398e-03, 4.314e+05}, {7.881191e-06, 4.752437e-03, 4.314e+05}, {+1.021621299694e+00, -4.403919155288e-01}},
    {OO::MAE, {9.896923e-08, 5.211532e-04, 7.352e+04}, {9.896824e-08, 5.211322e-04, 7.352e+04}, {+1.004022756409e+00, -5.136901956278e-01, +2.591752916980e-01}},
    {OO::MAE, {2.644694e-09, 7.894635e-05, 8.528e+03}, {2.644615e-09, 7.894714e-05, 8.526e+03}, {+9.998654671013e-01, -5.047998094532e-01, +3.441113116773e-01, -1.817679870862e-01}},
    {OO::MAE, {3.770277e-11, 9.149313e-06, 2.334e+03}, {3.770421e-11, 9.117364e-06, 2.334e+03}, {+9.998612360906e-01, -5.000937606045e-01, +3.403161405820e-01, -2.574482855195e-01, +1.317775312126e-01}},
    {OO::MAE, {1.005724e-12, 1.549721e-06, 2.670e+02}, {1.004323e-12, 1.511340e-06, 2.677e+02}, {+9.999906759786e-01, -4.998247182573e-01, +3.338519149306e-01, -2.572047114441e-01, +2.028946573619e-01, -1.006216684275e-01}},
    {OO::MAE, {2.147892e-14, 2.682209e-07, 5.100e+01}, {2.136047e-14, 2.190476e-07, 4.927e+01}, {+1.000002350298e+00, -4.999735649172e-01, +3.330719790109e-01, -2.509262023462e-01, +2.077808120808e-01, -1.668386797838e-01, +7.937758992445e-02}},
    {OO::MAE, {6.609521e-16, 8.940697e-08, 1.100e+01}, {4.352729e-16, 3.122212e-08, 1.024e+01}, {+1.000000596625e+00, -5.000031829201e-01, +3.332664821225e-01, -2.497141100827e-01, +2.015722089924e-01, -1.746315623781e-01, +1.395098951614e-01, -6.298585107024e-02}},

    {OO::MULPE, {8.897911e-04, 7.484427e-02, 2.517e+06}, {8.897910e-04, 7.484425e-02, 2.517e+06}, {+9.606187202200e-01}},
    {OO::MULPE, {7.248998e-06, 8.592486e-03, 2.892e+05}, {7.249020e-06, 8.592518e-03, 2.892e+05}, {+1.013511005187e+00, -4.395316481227e-01}},
    {OO::MULPE, {1.339595e-07, 1.093149e-03, 3.683e+04}, {1.339626e-07, 1.093141e-03, 3.683e+04}, {+1.001896219341e+00, -5.110798103699e-01, +2.670328819446e-01}},
    {OO::MULPE, {3.777146e-09, 1.402795e-04, 4.717e+03}, {3.777418e-09, 1.402689e-04, 4.718e+03}, {+9.999057104288e-01, -5.033330689777e-01, +3.437819919252e-01, -1.882791635116e-01}},
    {OO::MULPE, {6.839460e-11, 2.020597e-05, 6.840e+02}, {6.840038e-11, 2.020322e-05, 6.844e+02}, {+9.999592227826e-01, -5.000172243523e-01, +3.381722153635e-01, -2.567840722976e-01, +1.371989692472e-01}},
    {OO::MULPE, {1.445543e-12, 3.218651e-06, 1.090e+02}, {1.444882e-12, 3.207812e-06, 1.080e+02}, {+9.999976701400e-01, -4.998917836960e-01, +3.335938712712e-01, -2.558037906406e-01, +2.037032324729e-01, -1.050373742780e-01}},
    {OO::MULPE, {4.090354e-14, 5.066395e-07, 1.700e+01}, {4.037694e-14, 4.567539e-07, 1.540e+01}, {+1.000000790681e+00, -4.999903235096e-01, +3.331501600195e-01, -2.504942171869e-01, +2.065610843073e-01, -1.687791064061e-01, +8.409705376978e-02}},
    {OO::MULPE, {1.068516e-15, 1.192093e-07, 4.000e+00}, {8.500149e-16, 7.134804e-08, 2.412e+00}, {+1.000000125567e+00, -5.000018386416e-01, +3.332997067971e-01, -2.497808174615e-01, +2.010418497054e-01, -1.735431109011e-01, +1.412949850900e-01, -6.669884244006e-02}},

    {OO::MULPE_MAE, {6.379958e-04, 5.946615e-02, 2.971e+06}, {6.379957e-04, 5.946613e-02, 2.971e+06}, {+9.298624774926e-01}},
    {OO::MULPE_MAE, {6.747593e-06, 5.871683e-03, 3.728e+05}, {6.747600e-06, 5.871665e-03, 3.728e+05}, {+1.017924437930e+00, -4.372687644440e-01}},
    {OO::MULPE_MAE, {1.048613e-07, 7.103384e-04, 5.918e+04}, {1.048578e-07, 7.103022e-04, 5.918e+04}, {+1.003157540134e+00, -5.131892296153e-01, +2.629157337063e-01}},
    {OO::MULPE_MAE, {2.386799e-09, 1.045167e-04, 7.012e+03}, {2.386801e-09, 1.045177e-04, 7.012e+03}, {+9.999123696071e-01, -5.043854502192e-01, +3.432274305840e-01, -1.823854396682e-01}},
    {OO::MULPE_MAE, {3.516004e-11, 1.305342e-05, 1.798e+03}, {3.515769e-11, 1.303862e-05, 1.799e+03}, {+9.998930740898e-01, -5.000859218989e-01, +3.396743127742e-01, -2.568642857651e-01, +1.327185265602e-01}},
    {OO::MULPE_MAE, {9.891858e-13, 2.175570e-06, 1.960e+02}, {9.897306e-13, 2.171103e-06, 1.961e+02}, {+9.999941269039e-01, -4.998488430390e-01, +3.337402666574e-01, -2.567067447007e-01, +2.032015535367e-01, -1.020949600130e-01}},
    {OO::MULPE_MAE, {2.123840e-14, 3.278255e-07, 3.400e+01}, {2.091685e-14, 3.169078e-07, 3.359e+01}, {+1.000001549272e+00, -4.999782464356e-01, +3.331104827589e-01, -2.508419538974e-01, +2.072794637343e-01, -1.667573927041e-01, +8.014303750665e-02}},
    {OO::MULPE_MAE, {6.992512e-16, 8.940697e-08, 7.000e+00}, {4.356551e-16, 4.462124e-08, 6.726e+00}, {+1.000000389109e+00, -5.000025180089e-01, +3.332774818999e-01, -2.497495975627e-01, +2.014576450026e-01, -1.741697321483e-01, +1.393239278412e-01, -6.334783274167e-02}},
    {OO::MULPE_MAE, {9.077671e-17, 2.980232e-08, 2.000e+00}, {1.185618e-17, 7.323494e-09, 7.284e-01}, {+9.999999968426e-01, -5.000010022894e-01, +3.333352677374e-01, -2.499137788257e-01, +1.997704915474e-01, -1.685521799690e-01, +1.500791323679e-01, -1.190706400136e-01, +5.196620089570e-02}},
};

// clang-format on
}  // namespace

const Approximation *find_best_approximation(const std::vector<Approximation> &table,
                                             ApproximationPrecision precision, Type type,
                                             int num_omitted_terms_in_table = 0) {
#define DEBUG_APPROXIMATION_SEARCH 0
    const Approximation *best = nullptr;
    constexpr int term_cost = 20;
    constexpr int extra_term_cost = 200;
    double best_score = 0;
#if DEBUG_APPROXIMATION_SEARCH
    std::printf("Looking for min_terms=%d, max_absolute_error=%f\n",
                precision.constraint_min_poly_terms, precision.constraint_max_absolute_error);
#endif
    for (size_t i = 0; i < table.size(); ++i) {
        const Approximation &e = table[i];

        double penalty = 0.0;

        int obj_score = e.objective == precision.optimized_for ? 100 * term_cost : 0;
        if (precision.optimized_for == ApproximationPrecision::MULPE_MAE &&
            e.objective == ApproximationPrecision::MULPE) {
            obj_score = 50 * term_cost;  // When MULPE_MAE is not available, prefer MULPE.
        }

        int num_terms = int(e.coefficients.size() + num_omitted_terms_in_table);
        int term_count_score = (12 - num_terms) * term_cost;
        if (num_terms < precision.constraint_min_poly_terms) {
            penalty += (precision.constraint_min_poly_terms - num_terms) * extra_term_cost;
        }


        const Approximation::Metrics *metrics = nullptr;
        if (type == Float(32)) {
            metrics = &e.metrics_f32;
        } else if (type == Float(64)) {
            metrics = &e.metrics_f32;
        } else {
            internal_error << "Cannot find approximation for type " << type;
        }

        double precision_score = 0;
        // If we don't care about the maximum number of terms, we maximize precision.
        switch (precision.optimized_for) {
        case ApproximationPrecision::MSE:
            precision_score = -std::log(metrics->mse);
            break;
        case ApproximationPrecision::MAE:
            precision_score = -std::log(metrics->mae);
            break;
        case ApproximationPrecision::MULPE:
            precision_score = -std::log(metrics->mulpe);
            break;
        case ApproximationPrecision::MULPE_MAE:
            precision_score = -0.5 * std::log(metrics->mulpe * metrics->mae);
            break;
        }

        if (precision.constraint_max_ulp_error != 0 &&
            precision.constraint_max_ulp_error < metrics->mulpe) {
            float error_ratio = float(metrics->mulpe) / precision.constraint_max_ulp_error;
            penalty += 20 * error_ratio * extra_term_cost;  // penalty for not getting the required precision.
        }

        if (precision.constraint_max_absolute_error > 0.0 &&
            precision.constraint_max_absolute_error < metrics->mae) {
            float error_ratio = metrics->mae / precision.constraint_max_absolute_error;
            penalty += 20 * error_ratio * extra_term_cost;  // penalty for not getting the required precision.
        }

        double score = obj_score + term_count_score + precision_score - penalty;
#if DEBUG_APPROXIMATION_SEARCH
        std::printf("Score for %zu (%d terms): %f = %d + %d + %f - penalty %f\n",
                    i, num_terms, score, obj_score, term_count_score,
                    precision_score, penalty);
#endif
        if (score > best_score || best == nullptr) {
            best = &e;
            best_score = score;
        }
    }
#if DEBUG_APPROXIMATION_SEARCH
    std::printf("Best score: %f\n", best_score);
#endif
    return best;
}

const Approximation *best_atan_approximation(Halide::ApproximationPrecision precision, Type type) {
    return find_best_approximation(table_atan, precision, type);
}

const Approximation *best_sin_approximation(Halide::ApproximationPrecision precision, Type type) {
    return find_best_approximation(table_sin, precision, type);
}

const Approximation *best_cos_approximation(Halide::ApproximationPrecision precision, Type type) {
    return find_best_approximation(table_cos, precision, type);
}

const Approximation *best_tan_approximation(Halide::ApproximationPrecision precision, Type type) {
    return find_best_approximation(table_tan, precision, type, 1);
}

const Approximation *best_exp_approximation(Halide::ApproximationPrecision precision, Type type) {
    return find_best_approximation(table_exp, precision, type, 2);
}

const Approximation *best_expm1_approximation(Halide::ApproximationPrecision precision, Type type) {
    return find_best_approximation(table_expm1, precision, type, 1);
}

const Approximation *best_log_approximation(Halide::ApproximationPrecision precision, Type type) {
    return find_best_approximation(table_log, precision, type);
}

}  // namespace Internal
}  // namespace Halide
